<?php
/*  DD
 *	This module is designed to allow you to easily implement custom validation on content submissions.
 * 	It uses the node_validate hook and passes the form content to you within $form_state, you can then perform
 *	Any logic you need to check that the submitted content is valid.
 *
 *	If additonal validation is required, you can just add another case statement in, you can also use the
 * 	nycc_content_validation_admin function to add a new fieldset to the nycc content validation configuration screen
 * 	which can be handy if you want to expose some options through the droopy interface.
*/
function nycc_content_validation_node_validate($node, $form, &$form_state) {
	if(!isset($form['#form_id'])){
		return;
	}

	$form_id = $form['#form_id'];
    switch($form_id) {

            case 'article_node_form':
            	/*
					Here we will validate that if service news is selected then at least one group audience has been provided.
            	*/
				if(!variable_get('nycc_content_validation_service_news_enabled', true)){
					return;
				}

				// Get the taxonomy term name (service news, corp news, members news...) from the submitted ID
				$tid = taxonomy_term_load($form_state['input'][variable_get('nycc_content_validation_service_news_field_name')][LANGUAGE_NONE]);

				// If the term is equal to service news then we've got to make sure a directorate has been chosen...
				if($tid->name == variable_get('nycc_content_validation_service_taxonomy_name')){
					// Get the group audiences that've been chosen
					$selectedOpts = $form_state['input']['og_group_ref'][LANGUAGE_NONE][0]['default'];
					$adminOpts = $form_state['input']['og_group_ref'][LANGUAGE_NONE][0]['admin'][0]['target_id'];

					// If we haven't got any selected options, or they've selected the 'none' option then we need to show an error
					if((count($selectedOpts) == 0 || (count($selectedOpts) == 1 && $selectedOpts[0] == '_')) && empty($adminOpts)){
						form_set_error('og_group_ref', variable_get('nycc_content_validation_service_news_warning'));

					}

					unset($selectedOpts);
				}

				unset($tid);
            break;
    }

    unset($form_id);
}


function nycc_content_validation_admin(){
	$form = array();
	$form['nycc_content_validation_helptext'] = array(
		'#markup' => 'The configuration on this page is <u>not meant to be changed</u> unless there is an issue with the validation. This could be caused by, for example renaming a taxonomy term which is relied upon for correct validation. You cannot implement new validation rules with this configuration screen.</br></br>',
	);
	$form['service_news_validation'] = array(
		'#type' => 'fieldset',
		'#collapsible' => true,
		'#collapsed' => true,
		'#title' => 'Service News Validation',
		'#attributes' => array('id' => 'service_news_validation_fields')
	);
	$form['service_news_validation']['service_news_validation_helptext'] = array(
		'#markup' => '<h4>The configuration here is used to ensure that service news has at least one target service area</h4><p>It is <u>unlikely any of these values will need to be changed</u>, if set incorrectly the service news validation will break.</p>'
	);
	$form['service_news_validation']['nycc_content_validation_service_news_field_name'] = array(
		'#type' => 'textfield',
		'#title' => 'Machine name of "news type" field on the article content type',
		'#default_value' => variable_get('nycc_content_validation_service_news_field_name', 'field_news_type'),
		'#required' => true,
	);
	$form['service_news_validation']['nycc_content_validation_service_taxonomy_name'] = array(
		'#type' => 'textfield',
		'#title' => 'The friendly name given to the service news taxonomy',
		'#default_value' => variable_get('nycc_content_validation_service_taxonomy_name', 'Service news'),
		'#description' => 'The name of the service news taxonomy',
		'#required' => true,
	);
	$form['service_news_validation']['nycc_content_validation_service_news_warning'] = array(
		'#type' => 'textfield',
		'#title' => 'The error presented if you try and save service news without selecting any target service areas',
		'#default_value' => variable_get('nycc_content_validation_service_news_warning', 'Please select a service area (group audience) for your service news.'),
		'#description' => 'The error to display if service news has been chosen without providing any service areas',
		'#required' => true,
	);
	$options = array(
		true => 'Enabled',
		false => 'Disabled',
	);
	$form['service_news_validation']['nycc_content_validation_service_news_enabled'] = array(
		'#type' => 'radios',
		'#title' => 'Enable or disable service news validation',
		'#options' => $options,
		'#default_value' => variable_get('nycc_content_validation_service_news_enabled', true),
	);

	return system_settings_form($form);
}

function nycc_content_validation_menu(){
	$items = array();
	$items['admin/config/nycc/content-validation'] = array(
		'title' => 'NYCC Content validation',
		'description' => 'Configure any validation specific options',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('nycc_content_validation_admin'),
		'access arguments' => array('Administer NYCC Content validation'),
	);

	return $items;
}