<?php
require DRUPAL_ROOT . '/' . drupal_get_path('module', 'nycc_forum_enhancements') . '/includes/nycc_og_forum.inc';
/**
 * DD
 * Configures appropriate permissions on forum topic nodes
 *
 * If the group audience is changed for a forum taxonomy term
 * this function ensures that any associated forum topics are updated.
 *
 * This should make sure that topics are only visible to the group audience(s)
 * specified in the updated taxonomy term, default behavior doesn't seem to retrospectively
 * update these forum topics.
 */
function nycc_forum_enhancements_taxonomy_term_update($term) {

	$query = new EntityFieldQuery();

	// Get all forum nodes assosciated with the term
	$query->entityCondition('entity_type', 'node', '=')
	->entityCondition('bundle', 'forum', '=')
	->fieldCondition('taxonomy_forums', 'tid', $term->tid);

	$result = $query->execute();

	// If there are any results then create an array of the node IDs
	if(isset($result['node'])){
		$nids = array_keys($result['node']);
	}

	// If we've got any nodes to act on then loop over them
	if(isset($nids)){
		foreach($nids as $nid){
			$thisNode = node_load($nid); // Load this forum topic node

			// If it has any og_group_ref's assigned to it then we're going to need to remove them
			if(isset($thisNode->og_group_ref['und'])){
				$returnedNode = $thisNode;
				foreach($thisNode->og_group_ref['und'] as $grp){
					// Remove the subscription between this node, and the group audience
					$returnedNode = og_ungroup('node', $grp['target_id'], 'node', $returnedNode);
				}
			}

			// If we've been passed any group audience IDs with the updated term then loop over them
			$grants = array();

			if(isset($term->og_group_ref['und']) && count($term->og_group_ref['und']) != 0){
				foreach ($term->og_group_ref['und'] as $newGrpKey) {
					$refreshNode = node_load($nid);

					$values = array(
					'entity_type' => 'node',
					'entity' => $refreshNode,
					'state' => OG_STATE_ACTIVE,
					);

					// create a subscription between this node, and the group audience
					og_group('node', $newGrpKey['target_id'], $values);


					// Configure the node_access grants for the forum topic nodes..
					$grants[] = array(
						'realm' => 'og_access:node',
						'gid' => $newGrpKey['target_id'],
						'grant_view' => 1,
						'grant_update' => 0,
						'grant_delete' => 0,
					);
				}
			}
			else{
				// No group audience ID's were passed in, set default permissions up..
				$grants[] = array(
					'realm' => 'all',
					'gid' => 0,
					'grant_view' => 1,
					'grant_update' => 0,
					'grant_delete' => 0,
				);
			}
			node_access_write_grants($thisNode, $grants, NULL, true);
		}
	}
}

function nycc_forum_enhancements_preprocess_forum_list(&$variables){
  $iterate = $variables;
  $user_group = og_get_groups_by_user();

  if($user_group == null){
  	$user_group = array('node' => array());
  }

  $removeTerms = array();

	foreach($iterate['forums'] as $forum){
		$term = taxonomy_term_load($forum->tid);
		$grps = og_get_entity_groups('taxonomy_term', $term);
		$canView = false;

		foreach($user_group['node'] as $perm){
			if(isset($grps['node']) && in_array($perm, $grps['node'])){
				$canView = true;
			}
		}

		if(!$canView && count($grps) != 0){
			$removeTerms[] = $forum->tid;
		}
	}

	foreach($removeTerms as $t){
		unset($variables['forums'][$t]);

		foreach($variables['forums'] as $parentKey => $parentValue){
			if($parentValue->parents[0] == $t){
				unset($variables['forums'][$parentKey]);
			}
		}
	}
}

function nycc_forum_enhancements_menu_alter(&$items){
	global $user;
	if(isset($user->roles) && array_search('g_ALL_Members', $user->roles)){
		$items['forum']['access callback'] = FALSE;
	}
}